local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "steal a brainrot script",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "deep sea ",
   LoadingSubtitle = "by dez",
   ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Serenity", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "aetherhub", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "join discord ", -- Use this to tell the user how to get a key
      FileName = "Kira", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("Main", "rewind") -- you can use lucide.dev icons for this
local Section = Tab:CreateSection("click these to use them") -- calling tab
Rayfield:Notify({
   Title = "Loaded",
   Content = "thanks for using my script!",
   Duration = 6.5,
   Image = 4483362458,
})

local Button = Tab:CreateButton({ -- calling tab
   Name = "fly",
   Callback = function()
   print('worked') loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Infinite-Yield-43437"))()
   end,
})

local Button = Tab:CreateButton({ -- calling tab
   Name = "spawn fish",
   Callback = function()
   print('worked') local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local playerGui = player:FindFirstChildOfClass("PlayerGui") or player:WaitForChild("PlayerGui")

-- Clean old GUI if exists
local existingGui = playerGui:FindFirstChild("FishCatcherGui")
if existingGui then
    existingGui:Destroy()
end

local fishFolder = ReplicatedStorage:WaitForChild("A__Assets"):WaitForChild("Fish")
local addToInventoryRF = ReplicatedStorage:WaitForChild("Packages")
    :WaitForChild("_Index")
    :WaitForChild("sleitnick_knit@1.7.0")
    :WaitForChild("knit")
    :WaitForChild("Services")
    :WaitForChild("FishService")
    :WaitForChild("RF")
    :WaitForChild("AddToInventory")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FishCatcherGui"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

-- Main frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 320, 0, 210)
frame.Position = UDim2.new(0.5, -160, 0.4, -105)
frame.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
frame.BorderSizePixel = 0
frame.AnchorPoint = Vector2.new(0, 0)
frame.ZIndex = 10
frame.Parent = screenGui

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 12)
frameCorner.Parent = frame

-- Title bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 40)
titleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
titleBar.BorderSizePixel = 0
titleBar.Parent = frame
titleBar.ZIndex = 11

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -90, 1, 0) -- space for buttons
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Fish Catcher"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 24
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = titleBar

-- Close button
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 40, 0, 40)
closeBtn.Position = UDim2.new(1, -40, 0, 0)
closeBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.Font = Enum.Font.SourceSansBold
closeBtn.TextSize = 22
closeBtn.Parent = titleBar
closeBtn.ZIndex = 12

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 8)
closeCorner.Parent = closeBtn

closeBtn.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Minimize button
local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Size = UDim2.new(0, 40, 0, 40)
minimizeBtn.Position = UDim2.new(1, -80, 0, 0)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
minimizeBtn.Text = "â€“"
minimizeBtn.TextColor3 = Color3.new(1, 1, 1)
minimizeBtn.Font = Enum.Font.SourceSansBold
minimizeBtn.TextSize = 28
minimizeBtn.Parent = titleBar
minimizeBtn.ZIndex = 12

local minimizeCorner = Instance.new("UICorner")
minimizeCorner.CornerRadius = UDim.new(0, 8)
minimizeCorner.Parent = minimizeBtn

-- Restore tab (top + draggable)
local restoreBtn = Instance.new("TextButton")
restoreBtn.Size = UDim2.new(0, 160, 0, 35)
restoreBtn.Position = UDim2.new(0.5, -80, 0, 10) -- top center
restoreBtn.BackgroundColor3 = Color3.fromRGB(40, 120, 200)
restoreBtn.Text = "Open Fish Catcher"
restoreBtn.TextColor3 = Color3.new(1, 1, 1)
restoreBtn.Font = Enum.Font.SourceSansBold
restoreBtn.TextSize = 18
restoreBtn.Visible = false
restoreBtn.Parent = screenGui
restoreBtn.ZIndex = 15

local restoreCorner = Instance.new("UICorner")
restoreCorner.CornerRadius = UDim.new(0, 8)
restoreCorner.Parent = restoreBtn

minimizeBtn.MouseButton1Click:Connect(function()
    frame.Visible = false
    restoreBtn.Visible = true
end)

restoreBtn.MouseButton1Click:Connect(function()
    frame.Visible = true
    restoreBtn.Visible = false
end)

-- Dragging functionality for main frame (title bar only)
local dragging = false
local dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        update(input)
    end
end)

-- Dragging functionality for restore tab
local draggingRestore = false
local dragInputRestore, dragStartRestore, startPosRestore

local function updateRestore(input)
    local delta = input.Position - dragStartRestore
    restoreBtn.Position = UDim2.new(
        startPosRestore.X.Scale,
        startPosRestore.X.Offset + delta.X,
        startPosRestore.Y.Scale,
        startPosRestore.Y.Offset + delta.Y
    )
end

restoreBtn.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        draggingRestore = true
        dragStartRestore = input.Position
        startPosRestore = restoreBtn.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                draggingRestore = false
            end
        end)
    end
end)

restoreBtn.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInputRestore = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if draggingRestore and input == dragInputRestore then
        updateRestore(input)
    end
end)

-- Select Fish Label
local selectLabel = Instance.new("TextLabel")
selectLabel.Size = UDim2.new(1, -20, 0, 25)
selectLabel.Position = UDim2.new(0, 10, 0, 50)
selectLabel.BackgroundTransparency = 1
selectLabel.Text = "Select Fish:"
selectLabel.TextColor3 = Color3.new(1, 1, 1)
selectLabel.Font = Enum.Font.SourceSans
selectLabel.TextSize = 20
selectLabel.TextXAlignment = Enum.TextXAlignment.Left
selectLabel.Parent = frame

-- Dropdown button
local dropdownButton = Instance.new("TextButton")
dropdownButton.Size = UDim2.new(1, -20, 0, 30)
dropdownButton.Position = UDim2.new(0, 10, 0, 80)
dropdownButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
dropdownButton.TextColor3 = Color3.new(1, 1, 1)
dropdownButton.Font = Enum.Font.SourceSans
dropdownButton.TextSize = 20
dropdownButton.Text = "Select Fish"
dropdownButton.AutoButtonColor = true
dropdownButton.Parent = frame
dropdownButton.ZIndex = 11

-- Dropdown list
local listFrame = Instance.new("ScrollingFrame")
listFrame.Size = UDim2.new(1, -20, 0, 115)
listFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
listFrame.BorderSizePixel = 0
listFrame.Position = UDim2.new(0, 10, 0, 115)
listFrame.Visible = false
listFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
listFrame.ScrollBarThickness = 8
listFrame.Parent = frame
listFrame.ZIndex = 11

local listCorner = Instance.new("UICorner")
listCorner.CornerRadius = UDim.new(0, 8)
listCorner.Parent = listFrame

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 4)
UIListLayout.Parent = listFrame

-- Get all fish names
local fishNames = {}
for _, fish in ipairs(fishFolder:GetChildren()) do
    table.insert(fishNames, fish.Name)
end

local selectedFishName = nil

local function closeDropdown()
    listFrame.Visible = false
end

local function openDropdown()
    listFrame.Visible = true
end

-- Populate fish list
for i, fishName in ipairs(fishNames) do
    local fishBtn = Instance.new("TextButton")
    fishBtn.Size = UDim2.new(1, -10, 0, 28)
    fishBtn.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
    fishBtn.TextColor3 = Color3.new(1, 1, 1)
    fishBtn.Font = Enum.Font.SourceSans
    fishBtn.TextSize = 18
    fishBtn.Text = fishName
    fishBtn.LayoutOrder = i
    fishBtn.AutoButtonColor = true
    fishBtn.Parent = listFrame
    fishBtn.ZIndex = 12

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = fishBtn

    fishBtn.MouseEnter:Connect(function()
        fishBtn.BackgroundColor3 = Color3.fromRGB(115, 115, 115)
    end)
    fishBtn.MouseLeave:Connect(function()
        fishBtn.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
    end)

    fishBtn.MouseButton1Click:Connect(function()
        selectedFishName = fishName
        dropdownButton.Text = fishName
        closeDropdown()
    end)
end

UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    listFrame.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + 8)
end)

dropdownButton.MouseButton1Click:Connect(function()
    if listFrame.Visible then
        closeDropdown()
    else
        openDropdown()
    end
end)

-- Get Fish button
local getButton = Instance.new("TextButton")
getButton.Size = UDim2.new(1, -20, 0, 40)
getButton.Position = UDim2.new(0, 10, 1, -50)
getButton.BackgroundColor3 = Color3.fromRGB(0, 145, 0)
getButton.TextColor3 = Color3.new(1, 1, 1)
getButton.Font = Enum.Font.SourceSansBold
getButton.TextSize = 26
getButton.Text = "Get Fish"
getButton.AutoButtonColor = true
getButton.Parent = frame
getButton.ZIndex = 10

local btnCorner = Instance.new("UICorner")
btnCorner.CornerRadius = UDim.new(0, 10)
btnCorner.Parent = getButton

getButton.MouseEnter:Connect(function()
    getButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
end)
getButton.MouseLeave:Connect(function()
    getButton.BackgroundColor3 = Color3.fromRGB(0, 145, 0)
end)

getButton.MouseButton1Click:Connect(function()
    if not selectedFishName then
        warn("[FishCatcher] Please select a fish first!")
        return
    end

    local args = {
        selectedFishName,
        "Catch"
    }

    local success, err = pcall(function()
        return addToInventoryRF:InvokeServer(unpack(args))
    end)

    if success then
        print("[FishCatcher] Successfully added fish:", selectedFishName)
    else
        warn("[FishCatcher] Failed to add fish:", err)
    end
end)

   end,
})
